#!/usr/bin/env python  
import rospy

import numpy

import tf
import tf2_ros
import geometry_msgs.msg

def publish_transforms():
	t1 = geometry_msgs.msg.TransformStamped()
	t1.header.stamp = rospy.Time.now()
	t1.header.frame_id = "base_frame"
	t1.child_frame_id = "object_frame"
	
	q1 = tf.transformations.quaternion_from_euler(0.64, 0.64, 0.0)
	t1.transform.rotation.x = q1[0]
	t1.transform.rotation.y = q1[1]
	t1.transform.rotation.z = q1[2]
	t1.transform.rotation.w = q1[3]
	q12 = numpy.dot(tf.transformations.euler_matrix(0.64,0.64,0.0),(1.5,0.8,0.0))
	t1.transform.translation.x = q12[0]
	t1.transform.translation.y = q12[1]
	t1.transform.translation.z = q12[2]
	br.sendTransform(t1)

	#######--------------------------------
	t2 = geometry_msgs.msg.TransformStamped()
	t2.header.stamp = rospy.Time.now()
	t2.header.frame_id = "base_frame"
	t2.child_frame_id = "robot_frame"
	
	q2 = tf.transformations.quaternion_about_axis(1.5, (0,1,0))
	t2.transform.rotation.x = q1[0]
	t2.transform.rotation.y = q1[1]
	t2.transform.rotation.z = q1[2]
	t2.transform.rotation.w = q1[3]
	q22 = numpy.dot(tf.transformations.quaternion_matrix(tf.transformations.quaternion_about_axis(1.5, (0,1,0))),(0.0,0.0,-2.0))
	t2.transform.translation.x = q22[0]
	t2.transform.translation.y = q22[1]
	t2.transform.translation.z = q22[2]
	br.sendTransform(t2)

   
if __name__ == '__main__':
    rospy.init_node('tf2_examples')

    br = tf2_ros.TransformBroadcaster()
    rospy.sleep(0.5)

    while not rospy.is_shutdown():
        publish_transforms()
        rospy.sleep(0.5)
